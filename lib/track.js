// Generated by CoffeeScript 1.6.3
var RestService, Track,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

RestService = require("./restService");

Track = (function(_super) {
  __extends(Track, _super);

  function Track(baseUrl, accessToken) {
    this.baseUrl = baseUrl;
    this.accessToken = accessToken;
    Track.__super__.constructor.call(this, "/track");
  }

  Track.prototype.getPoints = function(id, callback) {
    return this.createRequest("" + this.url + "/" + id + "/points").end(processResult.bind(this, callback));
  };

  Track.prototype.addPoints = function(id, points, callback) {
    return this.createRequest("" + this.url + "/" + id + "/points", "post").send(points).end(this.processResult.bind(this, callback));
  };

  Track.prototype.importPointsFromFiles = function(id, files, format, callback) {
    var file, i, r, _i, _len;
    format = format.toUpperCase();
    if (format !== "CSV" && format !== "KML") {
      return callback(new Error("Format " + (format || '<null>') + " is not supported"));
    }
    r = this.createRequest("" + this.url + "/" + id + "/points/import" + format, "post");
    i = 1;
    for (_i = 0, _len = files.length; _i < _len; _i++) {
      file = files[_i];
      r = r.attach("file" + i, file);
      i += 1;
    }
    return r.end(this.processResult.bind(this, callback));
  };

  return Track;

})(RestService);

module.exports = Track;
